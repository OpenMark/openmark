<project name="Om" basedir="." default="all">
 
	<description>
		Builds the Om (OpenMark) project. Use the 'all' target to build all webapps
		including required libraries. Use 'all-nolibs' if you are going to install
		the required libraries (Apache Axis plus mail.jar and activation.jar from
		J2EE) elsewhere in your application server.
	</description>
	
	<!--
		1. Prerequisite locations
		
		You definitely need to set the following properties.
		-->
	
	<!--
		Modify Axis home. Should point to an Axis 1.4 install on the build 
		machine. Used to obtain Axis lib files.
		-->
	<property name="axishome" value=""/>
	
	<!--
		Set location for Java Activation Framework install, used for activation.jar.
		-->
	<property name="jafhome" value=""/>
	
	<!--
		Set location for Java Mail install, used for mail.jar.
		-->
	<property name="javamailhome" value=""/>
	
		<!--
			Provide location for the servlet-api.jar file. If you are using Tomcat,
			this should be set to [tomcathome]/common/lib
			-->
	<property name="servletapi" value=""/>
	
	<!--
		Set location for the xerces jars.
		-->
	<property name="xerceshome" value=""/>
	

	<!-- 
		2. Other locations
		
		On a Unix/OS X machine, the following properties may be OK, but you might
		want to configure them.
		-->

	<!-- 
		Specify the desired build folder. This folder is COMPLETELY DELETED each
		time you build! Please bear that in mind.
		-->
	<property name="build" value="/tmp/om-build"/>
	
	<!--
		Alter where the results of the 'javadoc' target are built to. 
		This folder is COMPLETELY DELETED when you build the javadoc target.
		-->
	<property name="javadoc" value="${build}/javadoc"/>

	
	<!-- 
		3 Developer servlet defaults
		
		These just set up options in the devservlet's web.xml file. They default
		to options that should work on your machine, but may not be appropriate
		for question author machines, so change if needed. You can also directly
		modify the devservlet's web.xml after building.
		-->

	<!-- 
		Modify JDK home if necessary - this sets the default for the developer
		servlet, to make life easier for question developers. 
		-->
	<property name="jdkhome" value="${java.home}"/>

	<!-- 
		Modify Ant home if necessary - this sets the default for the developer
		servlet, to make life easier for question developers. Should point to
		an Ant 1.7 install on developer machines.
		-->
	<property name="anthome" value="${ant.home}"/>
	

	<!--
		4. Things you don't need to change.
		
		Don't mess with these unless you know what you're doing.
		-->
	
	<!-- 
		If building the equationgrammar target (not necessary unless altering
		grammar), you need to install JavaCC and put its location here 
	-->
	<property name="javacchome" value=""/>

	<!-- Version number - loaded into ${buildversion} -->
	<property file="version.properties"/>

	<!-- URL of our dev.java.net project. -->
	<property name="projecturl" value="https://openmark.dev.java.net/"/>
	
	<!-- Create fresh build folder -->
	<target name="init">
		<tstamp>
			<format property="newbuildstamp" pattern="yyyy-MM-dd HH:mm:ss"/>
		</tstamp>
		<condition property="buildstamp" value="${buildstamp}" else="${newbuildstamp}">
			<isset property="${buildstamp}"/>
		</condition>
		<delete dir="${build}" quiet="true"/>
		<mkdir dir="${build}"/>
	</target>

	
	<!-- Compile Java source -->
	<target name="compile" depends="init">
		
		<mkdir dir="${build}/compiled"/>
		
		<!-- Compile everything -->		
		<javac srcdir="src" destdir="${build}/compiled" debug="on" source="1.6" target="1.6">
			<!-- Include all lib files -->
			<classpath>
				<fileset dir="${servletapi}">
					<include name="servlet-api.jar"/>
				</fileset>
				<fileset dir="${axishome}/lib">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${jafhome}">
					<include name="activation.jar"/>
				</fileset>
				<fileset dir="${javamailhome}">
					<include name="mail.jar"/>
				</fileset>
			</classpath>
		</javac>
		
	</target>
	

	<!-- Copy data files from source to build folder -->
	<target name="copydata">
	
		<!-- Copy actual data -->
		<copy todir="${build}/compiled">
			<fileset dir="src">
				<exclude name="**/*.java"/>
				<exclude name="**/package.html"/>
			</fileset>
		</copy>
		
		<!-- Write version file -->
		<echo file="${build}/compiled/om/version.txt" append="false" >${buildversion}|${buildstamp}</echo>
		
	</target>		
	
	
	<!-- Create jar files -->
	<target name="jar" depends="compile,copydata">
		
		<mkdir dir="${build}/jars"/>
		
		<jar jarfile="${build}/jars/om-dev.jar" basedir="${build}/compiled">
			<include name="om/*"/>
			<include name="om/devservlet/"/>
			<include name="om/equation/"/>
			<include name="om/graph/"/>
			<include name="om/helper/"/>
			<include name="om/question/"/>
			<include name="om/stdcomponent/"/>
			<include name="om/stdquestion/"/>
			<include name="util/"/>			
		</jar>
		
		<jar jarfile="${build}/jars/om-engine.jar" basedir="${build}/compiled">
			<include name="om/*"/>
			<include name="om/equation/"/>
			<include name="om/graph/"/>
			<include name="om/helper/"/>
			<include name="om/qengine/"/>
			<include name="om/question/"/>
			<include name="om/stdcomponent/"/>
			<include name="om/stdquestion/"/>
			<include name="util/"/>			
		</jar>

		<jar jarfile="${build}/jars/om-navigator.jar" basedir="${build}/compiled">
			<include name="om/*"/>
			<include name="om/axis/qengine/"/>
			<include name="om/tnavigator/"/>
			<include name="util/"/>			
		</jar>

	</target>
	
	
	<!-- Build development server webapp -->
	<target name="devserver" depends="jar">
		
		<mkdir dir="${build}/webapps/om"/>
		<mkdir dir="${build}/webapps/om/WEB-INF"/>
		<mkdir dir="${build}/webapps/om/WEB-INF/lib"/>
		<mkdir dir="${build}/webapps/om/questions"/>
		
		<!-- Copy most of webinf -->
		<copy todir="${build}/webapps/om/WEB-INF">
			<fileset dir="webinf-dev">
				<exclude name="web.xml"/>
			</fileset>
		</copy>
		<!-- Copy web.xml but fill in JDKHOME -->
		<copy todir="${build}/webapps/om/WEB-INF">
			<fileset dir="webinf-dev">
				<include name="web.xml"/>
			</fileset>
		
			<filterset>
				<filter token="JDKHOME" value="${jdkhome}"/>
				<filter token="ANTHOME" value="${anthome}"/>
			</filterset>
		</copy>
		<!-- To avoid duplicating code, grab labels from test nav -->
		<copy todir="${build}/webapps/om/WEB-INF">
			<fileset dir="webinf-tnavigator">
				<include name="labels/**"/>
			</fileset>
		</copy>

		<copy todir="${build}/webapps/om/WEB-INF/lib" file="${build}/jars/om-dev.jar"/>
		
		<jar jarfile="${build}/webapps/om.war" basedir="${build}/webapps/om"/>
	</target>
	
	
	<!-- Build question engine webapp -->	
	<target name="qengine-base" depends="jar">
		
		<mkdir dir="${build}/webapps/om-qe"/>
		<mkdir dir="${build}/webapps/om-qe/WEB-INF"/>
		<mkdir dir="${build}/webapps/om-qe/WEB-INF/lib"/>
		<mkdir dir="${build}/webapps/om-qe/questioncache"/>
		
		<copy todir="${build}/webapps/om-qe/WEB-INF">
			<fileset dir="webinf-qengine">
				<include name="*"/>
			</fileset>
		</copy>
		
		<copy todir="${build}/webapps/om-qe/WEB-INF/lib" file="${build}/jars/om-engine.jar"/>
	</target>
	<target name="qengine-nolibs" depends="qengine-base">
		<jar jarfile="${build}/webapps/om-qe.war" basedir="${build}/webapps/om-qe"/>
	</target>
	<target name="qengine" depends="qengine-base">
		<copy todir="${build}/webapps/om-qe/WEB-INF/lib">
			<fileset dir="${axishome}/lib">
				<include name="*.jar"/>
			</fileset>
		</copy>
		<jar jarfile="${build}/webapps/om-qe.war" basedir="${build}/webapps/om-qe"/>
	</target>
	
	
	<!-- Build test navigator webapp -->
	<target name="tnavigator-base" depends="jar">
		
		<mkdir dir="${build}/webapps/om-tn"/>
		<mkdir dir="${build}/webapps/om-tn/WEB-INF"/>
		<mkdir dir="${build}/webapps/om-tn/WEB-INF/lib"/>
		<mkdir dir="${build}/webapps/om-tn/logs"/>
		
		<copy todir="${build}/webapps/om-tn/WEB-INF">
			<fileset dir="webinf-tnavigator"/>
		</copy>
		<!-- Sample navigator.xml doesn't go in web-inf -->
		<move file="${build}/webapps/om-tn/WEB-INF/navigator.sample.xml"
			todir="${build}/webapps/om-tn/"/>
		
		<!-- Copy sample tests -->
		<copy todir="${build}/webapps/om-tn/">
			<fileset dir="samples/tests"/>
		</copy>

		<copy todir="${build}/webapps/om-tn/WEB-INF/lib" file="${build}/jars/om-navigator.jar"/>
		
		<jar jarfile="${build}/webapps/om-tn.war" basedir="${build}/webapps/om-tn"/>
		
	</target>
	<target name="tnavigator-nolibs" depends="tnavigator-base">
		<jar jarfile="${build}/webapps/om-tn.war" basedir="${build}/webapps/om-tn"/>
	</target>
	<target name="tnavigator" depends="tnavigator-base">
		<copy todir="${build}/webapps/om-tn/WEB-INF/lib">
			<fileset dir="${axishome}/lib">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${jafhome}">
				<include name="activation.jar"/>
			</fileset>
			<fileset dir="${javamailhome}">
				<include name="mail.jar"/>
			</fileset>
			<fileset dir="${xerceshome}">
				<include name="*.jar"/>
			</fileset>
		</copy>
		<jar jarfile="${build}/webapps/om-tn.war" basedir="${build}/webapps/om-tn"/>
	</target>

	
	<target name="all" depends="qengine,tnavigator,devserver" 
		description="Build question engine, test navigator, and devserver webapps"/>
	
	<target name="all-nolibs" depends="qengine-nolibs,tnavigator-nolibs,devserver" 
		description="Build question engine, test navigator, and devserver webapps without external libraries"/>
	
	<target name="bundle-source"
		description="Bundle the source for upload to the project site.">
		<zip destfile="${build}/openmark_${buildversion}_src.zip">
			<fileset dir=".">
				<exclude name="bin/**"/>
				<exclude name="www/**"/>
				<exclude name="deploy.xml"/>
			</fileset>
		</zip>
		<echo level="info" message="To be uploaded to: ${projecturl}servlets/ProjectDocumentAdd?folderID=7783&amp;name=openmark_${buildversion}_src.zip&amp;status=Draft&amp;description=Source%20bundle%20of%20the%20${buildversion}%20development%20snapshot.&amp;type=file"/>
	</target>   

	
	<path id="axis.classpath">
		<fileset dir="${axishome}/lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="/">
			<!-- the * here stops it from making the ant script die if the folder doesn't exist -->
			<include name="${build}*/jars*/om-engine.jar"/>			
		</fileset>
	</path>
	<!-- The next line may show as a warning because axishome isn't set. -->
	<taskdef resource="axis-tasks.properties" classpathref="axis.classpath"/>


	<!-- Standalone target: not built by all -->
	<target name="stubs-qengine" depends="init" description="Create question engine stubs using Apache Axis">

		<delete dir="${build}/axis/src"/>
		<mkdir dir="${build}/axis/src"/>
		
		<axis-wsdl2java 
			output="${build}/axis/src" 
			url="http://localhost:8080/om-qe/services/Om?wsdl">
			<mapping namespace="http://om.open.ac.uk/" package="om.axis.qengine"/>
		</axis-wsdl2java>
		
		<fail message="Axis failed">
			<condition>
				<not>
					<available file="${build}/axis/src/om" type="dir"/>				
				</not>
			</condition>
		</fail>
		
		<delete quiet="true">
			<fileset dir="src/om/axis/qengine" excludes="cvs"/>			
		</delete>		
		<copy todir="src">
			<fileset dir="${build}/axis/src">
				<include name="om/axis/qengine/*.java"/>
			</fileset>
		</copy>

	</target>

	
	<!-- Standalone target: not built by all -->
	<target name="equationgrammar" description="Build generated grammar for equations"
		depends="init">
		
		<mkdir dir="${build}/equationgrammar"/>
		
		<!-- Build grammar in temp -->
		<jjtree target="src/om/equation/grammar.jjt" javacchome="${javacchome}"
			outputdirectory="${build}/equationgrammar" outputfile="grammar.jj"/>
		<javacc target="${build}/equationgrammar/grammar.jj" javacchome="${javacchome}"
			outputdirectory="${build}/equationgrammar"/>
		
		<!-- Copy it to appropriate location in source tree -->
		<delete quiet="true">
			<fileset dir="src/om/equation/generated" excludes="cvs"/>			
		</delete>		
		<mkdir dir="src/om/equation/generated"/>		
		<copy todir="src/om/equation/generated">
			<fileset dir="${build}/equationgrammar" includes="*.java"/>
		</copy>
		<!-- Delete this because we used our own version that isn't in generated package -->
		<delete file="src/om/equation/generated/SimpleNode.java"/>
		
	</target>


	<!-- Standalone target: not built by all -->
	<target name="javadoc" description="Generate javadoc">
		
		<delete quiet="true">
			<fileset dir="${javadoc}">			
				<exclude name="**/cvs/"/>
				<exclude name="**/cvs"/>
			</fileset>
		</delete>

		<mkdir dir="${javadoc}"/>
		
		<javadoc sourcepath="src" destdir="${javadoc}" source="1.6"
			packagenames="om.*,util.*"
			excludepackagenames="om.equation.generated.*,om.axis.*">
			<classpath>
				<fileset dir="${servletapi}">
					<include name="servlet-api.jar"/>
				</fileset>		
				<fileset dir="${axishome}/lib">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${jafhome}">
					<include name="activation.jar"/>
				</fileset>
				<fileset dir="${javamailhome}">
					<include name="mail.jar"/>
				</fileset>
			</classpath>
		</javadoc>
	</target>
	
</project>