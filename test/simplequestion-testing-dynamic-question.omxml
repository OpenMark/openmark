<dynamic-question encrypted="true">
	<question class="om.dynamic.questions.Percent">

	<scoring>
		<marks>3</marks>
	</scoring>
	
  	<layout>
    	<row height="405"/>
		<row height="195"/>
		<column width="600"/>
  	</layout>
  
  	<box gridx="0" gridy="0" id="inputbox" background="input">
		<emphasis type="italic">Cis</emphasis>-retinal is made from Vitamin A. 
		TREVOR HINSON - Dynamic Questions !!! :) The World Health Organisation 
		(WHO) has recommended that children (6 months-10 years) 
		have a minimum daily intake of 400 µg of Vitamin A.
		<gap/>
		Bread, pasta, rice and water contain no Vitamin A.
		<gap/>
		<centre>
			<table cols="3" rows="8" head="1">
			<row><t>Portion</t><t>Food source</t><t>Vitamin A</t></row>
			<row><t>1 small piece (30 g)</t><t>Liver, fried</t><t>9,000 µg</t></row>
			<row><t>1 piece (200 g)</t><t>Carrot, cooked</t><t>760 µg</t></row>
			<row><t>&#xBD; cup (80 g)</t><t>Green peas, boiled</t><t>120 µg</t></row>
			<row><t>1 egg (50 g)</t><t>Egg, fried</t><t>95 µg</t></row>
			<row><t>1 glass (250 ml)</t><t>Whole milk</t><t>90 µg</t></row>
			<row><t>1 cob (128 g)</t><t>Corn, boiled</t><t>64 µg</t></row>
			<row><t>1 slice (135 g)</t><t>Fish, grilled</t><t>30 µg</t></row>
			</table>
		</centre>
		<gap/>
		Determine what percentage (to the nearest whole percent) of daily intake is obtained 
		by a 7 year old child __STATEMENT__.
		<gap/>
	    <indent>
		<editfield id="input" cols="3" label=""/> <eq italic="no">%</eq>
	    </indent>
	    <gap/>
    	<button action="actionSubmit" label="%%lENTERANSWER%%"/>
		<!--<button action="actionGiveUp" label="%%lGIVEUP%%"/>-->
  	</box>

  	<box gridx="0" gridy="1" id="answerbox" display="no" background="answer">
    	<t id="wrong">Your answer is 
    		<t id="wrongdps">numerically correct, but is not expressed to the nearest whole percent.</t>
    		<t id="inrange">numerically correct to within 1 percentage point, but is not expressed to the nearest whole percent.</t>
    		<t id="notinrange"><t id="still">still</t> incorrect.</t>
    	</t>
    	<t id="right">Your answer is correct<t id="dps"> to within 1 percentage point of the true value</t>.</t>
    	<t id="pass">You passed on this question.</t> 
		<gap/>

    	<t id="feedback">
	 		<t id="default">
				The percentage of daily intake can be calculated from the following equation:
				<gap/>
				<equation alt="Percentage daily intake equals one hundred multiplied by total Vitamin A intake in micro grams divided by four hundred">\mbox{Daily intake (%) } = \mbox{ 100 x } \frac{\mbox{total vitamin A (µg)}}{400}</equation>
				<gap/>
	  		</t>
    	</t>   
   		
   		<t id="show">
    		__ANSWER__% of daily Vitamin A intake is obtained by a 7 year old child __STATEMENT__.
			<gap/>
    	</t>
    	
    	<t id="answer"></t>
     
    	<button id="ok" action="actionOK" label="%%lTRYAGAIN%%"/>
		<button id="next" action="actionOK" label="%%lNEXTQUESTION%%" display="no"/>
  	</box>
 
</question>
	
	<handler handlerType="Coded" className="om.dynamic.questions.Percent">
		<![CDATA[
			package om.dynamic.questions;

import java.util.Random;
import om.OmDeveloperException;
import om.OmException;
import om.question.Results;
import om.stdcomponent.EditFieldComponent;
import om.stdquestion.QComponent;
import shared.RangeChecker;
import shared.Helper;
import om.helper.*;

public class Percent extends SimpleQuestion3
{

    public Percent()
    {
        NUMVARIANTS = STATEMENTS.length;
    }

    protected void init()
        throws OmException
    {
        setMaxAttempts(2);
        Random r = getRandom();
        iVariant = r.nextInt(NUMVARIANTS);
        setPlaceholder("STATEMENT", STATEMENTS[iVariant]);
        setPlaceholder("ANSWER", Integer.toString(ANSWERS[iVariant]));
        getResults().setQuestionLine((new StringBuilder()).append("Calculate % daily intake of Vitamin A for a 7 year old child ").append(STATEMENTS[iVariant]).append(". (Variant = ").append(iVariant).append(" from 0-").append(NUMVARIANTS - 1).append(")").toString());
    }

    protected boolean isRight(int iAttempt)
        throws OmDeveloperException
    {
        getComponent("show").setDisplay(false);
        getComponent("dps").setDisplay(false);
        getComponent("inrange").setDisplay(false);
        getComponent("wrongdps").setDisplay(false);
        getComponent("notinrange").setDisplay(false);
        String sInput = Helper.removeWhitespace(getEditField("input").getValue());
        int iAns = ANSWERS[iVariant];
        double dAns = ANSWERS[iVariant];
        int iSigFigs = SIGFIGS[iVariant];
        checker = new RangeChecker(dAns, 1.0D, iSigFigs);
        getResults().setAnswerLine(sInput);
        getResults().appendActionSummary((new StringBuilder()).append("Attempt ").append(iAttempt).append(": ").append(sInput).toString());
        if(checker.check(sInput))
        {
            getComponent("dps").setDisplay(Double.parseDouble(sInput) != dAns);
            return true;
        }
        if(checker.numberInRange && !checker.correctSigFigs)
        {
            getComponent("inrange").setDisplay(Double.parseDouble(sInput) != dAns);
            getComponent("wrongdps").setDisplay(Double.parseDouble(sInput) == dAns);
        } else
        if(!checker.numberInRange)
            getComponent("notinrange").setDisplay(true);
        setFeedbackID("default");
        if(iAttempt == 2 && !checker.check(sInput))
        {
            if(checker.numberInRange && !checker.correctSigFigs)
                bPartial = true;
            getComponent("show").setDisplay(true);
        }
        return false;
    }

    private static final String STATEMENTS[] = {
        "drinking 3 glasses of whole milk", "drinking water and eating 400g of fish", "eating three eggs", "drinking 8 glasses of whole milk", "eating bread spread with paste containing 5g of liver", "eating 100 g of carrots"
    };
    private static final int ANSWERS[] = {
        68, 22, 71, 180, 375, 95
    };
    private static final int SIGFIGS[] = {
        2, 2, 2, 3, 3, 2
    };
    private final int NUMVARIANTS;
    private int iVariant;
    private RangeChecker checker;

}

		]]>
	</handler>
	
</dynamic-question>



